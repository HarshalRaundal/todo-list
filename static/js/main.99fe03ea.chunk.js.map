{"version":3,"sources":["components/Button.js","components/Header.js","components/AddTask.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","show","showAddTask","type","style","boxShadow","color","value","className","onClick","Header","AddTask","addtask","useState","addTask","setNewTask","addDate","setNewDate","addTime","setNewTime","onSubmit","e","preventDefault","target","reset","alert","htmlFor","id","placeholder","onChange","Task","task","onDelete","onComplete","checked","complete","textDecoration","date","time","fontSize","Tasks","tasks","map","App","setTask","setAddTask","console","log","newTask","Math","floor","random","length","filter","textTransform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99fe03ea.chunk.js","sourcesContent":["\r\nconst Button = ({text,show,showAddTask}) => {\r\n\r\n    const style ={\r\n        boxShadow:' 3px 3px 20px rgba(247, 3, 3, 0.5)',\r\n        color:'red'\r\n    }\r\n    return (\r\n        <input type='button' style={show ? style:{}} value={text} className='button' onClick={showAddTask}/>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\nconst Header = ({showAddTask,show}) => {\r\n\r\n    \r\n    return (\r\n        <header>\r\n        <h1>ToDo List</h1>\r\n        \r\n        <Button text={show ?'close task':'add task'} showAddTask={showAddTask} show={show} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {useState} from 'react'\r\nconst AddTask = ({addtask}) => {\r\n\r\n    const [addTask,setNewTask] = useState('');\r\n    const [addDate,setNewDate] = useState('');\r\n    const [addTime,setNewTime] = useState('');\r\n\r\n    const onSubmit =(e)=>{\r\n            e.preventDefault();\r\n            if(!addTask){\r\n                alert('enter task')\r\n                return\r\n            }\r\n\r\n            addtask(addTask,addTime,addDate);\r\n            setNewTime('');\r\n            setNewDate('');\r\n            setNewTask('');\r\n            e.target.reset();\r\n    }\r\n    \r\n    return (\r\n        <form className='add-data' onSubmit={onSubmit}>\r\n            <div>\r\n           <label htmlFor='add-task'>enter task</label> \r\n           <input id='add-task' type='text' placeholder='task' onChange={(e) =>setNewTask(e.target.value)}/>\r\n           </div>\r\n           <div>\r\n           <label htmlFor='add-date'>enter date</label> \r\n           <input id='add-date' type='date' onChange={(e) =>setNewDate(e.target.value)}/>\r\n           </div>\r\n           <div>\r\n           <label htmlFor='add-time'>enter time</label> \r\n           <input id='add-time' type='time' onChange={(e) =>setNewTime(e.target.value)}/>\r\n           </div>\r\n           <div>\r\n           \r\n           <input id='save' value='submit' type='submit' className='button submit' />\r\n           </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import{ FaTrashAlt} from 'react-icons/fa';\r\n\r\nconst Task = ({task , onDelete , onComplete}) => {\r\n    \r\n    return (\r\n        <div className='task'>\r\n           \r\n\r\n            <input type=\"checkbox\" id={task.id} className='check' checked={task.complete ? true:false} onChange ={() =>onComplete(task.id)}/>\r\n            <label htmlFor={task.id} className='check-label'></label>\r\n\r\n            <div style={task.complete ? {textDecoration: 'line-through' , color:'red' } : {}}>\r\n                <h3>{task.text}</h3>\r\n                <h3>{task.date} ,{task.time}</h3>\r\n            </div>\r\n            \r\n            <FaTrashAlt style={{fontSize:'2em'}} onClick={() => onDelete(task.id)}/>\r\n            \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onComplete}) => {\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n          {tasks.map((task) => (<Task key ={task.id} task={task} onDelete={onDelete} onComplete={onComplete}/>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import{useState} from 'react'\nimport Header from\"./components/Header\"\nimport AddTask from './components/AddTask'\nimport Tasks from\"./components/Tasks\"\n\n\nfunction App() {\n  const [tasks,setTask] = useState([\n    {\n      id:1,\n      text:'write assignment',\n      date:'2021-05-25',\n      time:'14:15',\n      complete:false\n    },\n    {\n      id:2,\n      text:'workout',\n      date:'2021-05-27',\n      time:'11:15',\n      complete:true\n    },\n    {\n      id:3,\n      text:'write assignment',\n      date:'2021-05-25',\n      time:'13:15',\n      complete:false\n    }\n  ]);\n\nconst deleteTask = (id) =>{\n  setTask(tasks.filter((task)=>(id !== task.id)));\n}\n\nconst completeTask =(id)=>{\n  setTask(\n    tasks.map(\n    (task) => (\n      task.id === id ? {...task,complete : !task.complete}:task)\n    )\n    )\n}\n\nconst addNewTask = (text,time,date)=>{\n      const newTask ={\n        id:`${Math.floor(1000*Math.random()) + 2 }`,\n        text:text,\n        date:date,\n        time:time,\n        complete:false\n      }\n\n      setTask([...tasks,newTask])\n}\n\nconst [showAddTask,setAddTask] = useState(false);\n\nconst showToAdd =()=>{\n  setAddTask(!showAddTask);\n  console.log(showAddTask)\n}\n  return (\n    <div className=\"container\">\n      <Header showAddTask={showToAdd} show={showAddTask}/>\n      {showAddTask && <AddTask addtask={addNewTask}/>}\n     {tasks.length ?  <Tasks tasks={tasks} onDelete={deleteTask} onComplete={completeTask}/> : <div className='task' style={{textTransform:\"uppercase\"}}>nothing to do... </div>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}